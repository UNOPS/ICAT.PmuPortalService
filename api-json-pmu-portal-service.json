{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "string" } }
            }
          }
        }
      }
    },
    "/financing-scheme/{id}": {
      "get": {
        "operationId": "getOneBaseFinancingSchemeControllerFinancingScheme",
        "summary": "Retrieve a single FinancingScheme",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FinancingScheme" }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateOneBaseFinancingSchemeControllerFinancingScheme",
        "summary": "Update a single FinancingScheme",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/FinancingScheme" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FinancingScheme" }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "replaceOneBaseFinancingSchemeControllerFinancingScheme",
        "summary": "Replace a single FinancingScheme",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/FinancingScheme" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FinancingScheme" }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOneBaseFinancingSchemeControllerFinancingScheme",
        "summary": "Delete a single FinancingScheme",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "Delete one base response" } }
      }
    },
    "/financing-scheme": {
      "get": {
        "operationId": "getManyBaseFinancingSchemeControllerFinancingScheme",
        "summary": "Retrieve multiple FinancingSchemes",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyFinancingSchemeResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FinancingScheme"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createOneBaseFinancingSchemeControllerFinancingScheme",
        "summary": "Create a single FinancingScheme",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/FinancingScheme" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FinancingScheme" }
              }
            }
          }
        }
      }
    },
    "/financing-scheme/bulk": {
      "post": {
        "operationId": "createManyBaseFinancingSchemeControllerFinancingScheme",
        "summary": "Create multiple FinancingSchemes",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManyFinancingSchemeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/FinancingScheme" }
                }
              }
            }
          }
        }
      }
    },
    "/methodology-data/{id}": {
      "get": {
        "operationId": "getOneBaseMethodologyDataControllerMethodologyData",
        "summary": "Retrieve a single MethodologyData",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MethodologyData" }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateOneBaseMethodologyDataControllerMethodologyData",
        "summary": "Update a single MethodologyData",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MethodologyData" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MethodologyData" }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "replaceOneBaseMethodologyDataControllerMethodologyData",
        "summary": "Replace a single MethodologyData",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MethodologyData" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MethodologyData" }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOneBaseMethodologyDataControllerMethodologyData",
        "summary": "Delete a single MethodologyData",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "Delete one base response" } }
      }
    },
    "/methodology-data": {
      "get": {
        "operationId": "getManyBaseMethodologyDataControllerMethodologyData",
        "summary": "Retrieve multiple MethodologyData",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyMethodologyDataResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MethodologyData"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createOneBaseMethodologyDataControllerMethodologyData",
        "summary": "Create a single MethodologyData",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MethodologyData" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MethodologyData" }
              }
            }
          }
        }
      }
    },
    "/methodology-data/bulk": {
      "post": {
        "operationId": "createManyBaseMethodologyDataControllerMethodologyData",
        "summary": "Create multiple MethodologyData",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManyMethodologyDataDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/MethodologyData" }
                }
              }
            }
          }
        }
      }
    },
    "/methodology/methodology/methodologyinfo/{page}/{limit}/{sectorId}/{filterText}/{developedBy}": {
      "get": {
        "operationId": "MethodologyController_getMethoDetails",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "filterText",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "sectorId",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "developedBy",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      }
    },
    "/methodology/{id}": {
      "get": {
        "operationId": "getOneBaseMethodologyControllerMethodology",
        "summary": "Retrieve a single Methodology",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Methodology" }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateOneBaseMethodologyControllerMethodology",
        "summary": "Update a single Methodology",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Methodology" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Methodology" }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "replaceOneBaseMethodologyControllerMethodology",
        "summary": "Replace a single Methodology",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Methodology" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Methodology" }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOneBaseMethodologyControllerMethodology",
        "summary": "Delete a single Methodology",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "Delete one base response" } }
      }
    },
    "/methodology": {
      "get": {
        "operationId": "getManyBaseMethodologyControllerMethodology",
        "summary": "Retrieve multiple Methodologies",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyMethodologyResponseDto"
                    },
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Methodology" }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createOneBaseMethodologyControllerMethodology",
        "summary": "Create a single Methodology",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Methodology" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Methodology" }
              }
            }
          }
        }
      }
    },
    "/methodology/bulk": {
      "post": {
        "operationId": "createManyBaseMethodologyControllerMethodology",
        "summary": "Create multiple Methodologies",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManyMethodologyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Methodology" }
                }
              }
            }
          }
        }
      }
    },
    "/emission-reduction-draftdata/{id}": {
      "get": {
        "operationId": "getOneBaseEmissionReductionDraftdataControllerEmissionReductioDraftDataEntity",
        "summary": "Retrieve a single EmissionReductioDraftDataEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmissionReductioDraftDataEntity"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateOneBaseEmissionReductionDraftdataControllerEmissionReductioDraftDataEntity",
        "summary": "Update a single EmissionReductioDraftDataEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmissionReductioDraftDataEntity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmissionReductioDraftDataEntity"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "replaceOneBaseEmissionReductionDraftdataControllerEmissionReductioDraftDataEntity",
        "summary": "Replace a single EmissionReductioDraftDataEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmissionReductioDraftDataEntity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmissionReductioDraftDataEntity"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOneBaseEmissionReductionDraftdataControllerEmissionReductioDraftDataEntity",
        "summary": "Delete a single EmissionReductioDraftDataEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "Delete one base response" } }
      }
    },
    "/emission-reduction-draftdata": {
      "get": {
        "operationId": "getManyBaseEmissionReductionDraftdataControllerEmissionReductioDraftDataEntity",
        "summary": "Retrieve multiple EmissionReductioDraftDataEntities",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyEmissionReductioDraftDataEntityResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EmissionReductioDraftDataEntity"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createOneBaseEmissionReductionDraftdataControllerEmissionReductioDraftDataEntity",
        "summary": "Create a single EmissionReductioDraftDataEntity",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmissionReductioDraftDataEntity"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmissionReductioDraftDataEntity"
                }
              }
            }
          }
        }
      }
    },
    "/emission-reduction-draftdata/bulk": {
      "post": {
        "operationId": "createManyBaseEmissionReductionDraftdataControllerEmissionReductioDraftDataEntity",
        "summary": "Create multiple EmissionReductioDraftDataEntities",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManyEmissionReductioDraftDataEntityDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmissionReductioDraftDataEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/report/{id}": {
      "get": {
        "operationId": "getOneBaseReportControllerReport",
        "summary": "Retrieve a single Report",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Report" }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateOneBaseReportControllerReport",
        "summary": "Update a single Report",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Report" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Report" }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "replaceOneBaseReportControllerReport",
        "summary": "Replace a single Report",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Report" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Report" }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOneBaseReportControllerReport",
        "summary": "Delete a single Report",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "Delete one base response" } }
      }
    },
    "/report": {
      "get": {
        "operationId": "getManyBaseReportControllerReport",
        "summary": "Retrieve multiple Reports",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/GetManyReportResponseDto" },
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Report" }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createOneBaseReportControllerReport",
        "summary": "Create a single Report",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Report" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Report" }
              }
            }
          }
        }
      }
    },
    "/report/bulk": {
      "post": {
        "operationId": "createManyBaseReportControllerReport",
        "summary": "Create multiple Reports",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateManyReportDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Report" }
                }
              }
            }
          }
        }
      }
    },
    "/applicability/{id}": {
      "get": {
        "operationId": "getOneBaseApplicabilityControllerApplicabilityEntity",
        "summary": "Retrieve a single ApplicabilityEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApplicabilityEntity" }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateOneBaseApplicabilityControllerApplicabilityEntity",
        "summary": "Update a single ApplicabilityEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ApplicabilityEntity" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApplicabilityEntity" }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "replaceOneBaseApplicabilityControllerApplicabilityEntity",
        "summary": "Replace a single ApplicabilityEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ApplicabilityEntity" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApplicabilityEntity" }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOneBaseApplicabilityControllerApplicabilityEntity",
        "summary": "Delete a single ApplicabilityEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "Delete one base response" } }
      }
    },
    "/applicability": {
      "get": {
        "operationId": "getManyBaseApplicabilityControllerApplicabilityEntity",
        "summary": "Retrieve multiple ApplicabilityEntities",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyApplicabilityEntityResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ApplicabilityEntity"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createOneBaseApplicabilityControllerApplicabilityEntity",
        "summary": "Create a single ApplicabilityEntity",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ApplicabilityEntity" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApplicabilityEntity" }
              }
            }
          }
        }
      }
    },
    "/applicability/bulk": {
      "post": {
        "operationId": "createManyBaseApplicabilityControllerApplicabilityEntity",
        "summary": "Create multiple ApplicabilityEntities",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManyApplicabilityEntityDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApplicabilityEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/audit": {
      "post": {
        "operationId": "createOneBaseAuditControllerAudit",
        "summary": "Create a single Audit",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Audit" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Audit" }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getManyBaseAuditControllerAudit",
        "summary": "Retrieve multiple Audits",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/GetManyAuditResponseDto" },
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Audit" }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/audit/audit/auditinfo/{page}/{limit}/{userTypeId}/{action}/{editedOn}/{filterText}/{institutionId}": {
      "get": {
        "operationId": "AuditController_getAuditDetails",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "userTypeId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "action",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "editedOn",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filterText",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "institutionId",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      }
    },
    "/audit/{id}": {
      "get": {
        "operationId": "getOneBaseAuditControllerAudit",
        "summary": "Retrieve a single Audit",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Audit" }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateOneBaseAuditControllerAudit",
        "summary": "Update a single Audit",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Audit" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Audit" }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "replaceOneBaseAuditControllerAudit",
        "summary": "Replace a single Audit",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Audit" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Audit" }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOneBaseAuditControllerAudit",
        "summary": "Delete a single Audit",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "Delete one base response" } }
      }
    },
    "/audit/bulk": {
      "post": {
        "operationId": "createManyBaseAuditControllerAudit",
        "summary": "Create multiple Audits",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateManyAuditDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Audit" }
                }
              }
            }
          }
        }
      }
    },
    "/project": {
      "post": {
        "operationId": "createOneBaseProjectControllerProject",
        "summary": "Create a single Project",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Project" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Project" }
              }
            }
          },
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Project" }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getManyBaseProjectControllerProject",
        "summary": "Retrieve multiple Projects",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyProjectResponseDto"
                    },
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Project" }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/project/AllClimateAction/projectinfo/{page}/{limit}/{filterText}/{projectStatusId}/{projectApprovalStatusId}/{countryId}/{sectorId}": {
      "get": {
        "operationId": "ProjectController_getAllClimateActionList",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "filterText",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "projectStatusId",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "projectApprovalStatusId",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "countryId",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "sectorId",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      }
    },
    "/project/project/projectinfo/{page}/{limit}/{sectorId}/{statusId}/{mitigationActionTypeId}/{editedOn}/{filterText}": {
      "get": {
        "operationId": "ProjectController_getClimateActionDetails",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "sectorId",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "statusId",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "mitigationActionTypeId",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "editedOn",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filterText",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      }
    },
    "/project/AllClimateActions/projectinfo/{page}/{limit}/{filterText}/{projectStatusId}/{projectApprovalStatusId}/{assessmentStatusName}/{Active}/{countryId}/{sectorId}": {
      "get": {
        "operationId": "ProjectController_getAllClimateActionDetails",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "filterText",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "projectStatusId",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "projectApprovalStatusId",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "assessmentStatusName",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "Active",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "countryId",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "sectorId",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      }
    },
    "/project/{id}": {
      "patch": {
        "operationId": "updateOneBaseProjectControllerProject",
        "summary": "Update a single Project",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Project" }
            }
          }
        },
        "responses": { "200": { "description": "" } }
      },
      "get": {
        "operationId": "getOneBaseProjectControllerProject",
        "summary": "Retrieve a single Project",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Project" }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "replaceOneBaseProjectControllerProject",
        "summary": "Replace a single Project",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Project" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Project" }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOneBaseProjectControllerProject",
        "summary": "Delete a single Project",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "Delete one base response" } }
      }
    },
    "/project/bulk": {
      "post": {
        "operationId": "createManyBaseProjectControllerProject",
        "summary": "Create multiple Projects",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateManyProjectDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Project" }
                }
              }
            }
          }
        }
      }
    },
    "/country/{id}": {
      "patch": {
        "operationId": "updateOneBaseCountryControllerCountry",
        "summary": "Update a single Country",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Country" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Country" }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getOneBaseCountryControllerCountry",
        "summary": "Retrieve a single Country",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Country" }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "replaceOneBaseCountryControllerCountry",
        "summary": "Replace a single Country",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Country" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Country" }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOneBaseCountryControllerCountry",
        "summary": "Delete a single Country",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "Delete one base response" } }
      }
    },
    "/country": {
      "post": {
        "operationId": "createOneBaseCountryControllerCountry",
        "summary": "Create a single Country",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Country" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Country" }
              }
            }
          },
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Country" }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getManyBaseCountryControllerCountry",
        "summary": "Retrieve multiple Countries",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyCountryResponseDto"
                    },
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Country" }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/country/country1": {
      "get": {
        "operationId": "CountryController_getCountry",
        "parameters": [
          {
            "name": "countryId",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      }
    },
    "/country/country-sector": {
      "get": {
        "operationId": "CountryController_getCountrySector",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      }
    },
    "/country/bulk": {
      "post": {
        "operationId": "createManyBaseCountryControllerCountry",
        "summary": "Create multiple Countries",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateManyCountryDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Country" }
                }
              }
            }
          }
        }
      }
    },
    "/ndc": {
      "get": {
        "operationId": "getManyBaseNdcControllerNdc",
        "summary": "Retrieve multiple Ndcs",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      },
      "post": {
        "operationId": "createOneBaseNdcControllerNdc",
        "summary": "Create a single Ndc",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Ndc" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Ndc" }
              }
            }
          }
        }
      }
    },
    "/ndc/{id}": {
      "get": {
        "operationId": "getOneBaseNdcControllerNdc",
        "summary": "Retrieve a single Ndc",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Ndc" }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateOneBaseNdcControllerNdc",
        "summary": "Update a single Ndc",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Ndc" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Ndc" }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "replaceOneBaseNdcControllerNdc",
        "summary": "Replace a single Ndc",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Ndc" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Ndc" }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOneBaseNdcControllerNdc",
        "summary": "Delete a single Ndc",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "Delete one base response" } }
      }
    },
    "/ndc/bulk": {
      "post": {
        "operationId": "createManyBaseNdcControllerNdc",
        "summary": "Create multiple Ndcs",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateManyNdcDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Ndc" }
                }
              }
            }
          }
        }
      }
    },
    "/ndc-set/{id}": {
      "get": {
        "operationId": "getOneBaseNdcSetControllerNdcSet",
        "summary": "Retrieve a single NdcSet",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NdcSet" }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateOneBaseNdcSetControllerNdcSet",
        "summary": "Update a single NdcSet",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NdcSet" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NdcSet" }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "replaceOneBaseNdcSetControllerNdcSet",
        "summary": "Replace a single NdcSet",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NdcSet" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NdcSet" }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOneBaseNdcSetControllerNdcSet",
        "summary": "Delete a single NdcSet",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "Delete one base response" } }
      }
    },
    "/ndc-set": {
      "get": {
        "operationId": "getManyBaseNdcSetControllerNdcSet",
        "summary": "Retrieve multiple NdcSets",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/GetManyNdcSetResponseDto" },
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/NdcSet" }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createOneBaseNdcSetControllerNdcSet",
        "summary": "Create a single NdcSet",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NdcSet" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NdcSet" }
              }
            }
          }
        }
      }
    },
    "/ndc-set/bulk": {
      "post": {
        "operationId": "createManyBaseNdcSetControllerNdcSet",
        "summary": "Create multiple NdcSets",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateManyNdcSetDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/NdcSet" }
                }
              }
            }
          }
        }
      }
    },
    "/sub-ndc/{id}": {
      "get": {
        "operationId": "getOneBaseSubNdcControllerSubNdc",
        "summary": "Retrieve a single SubNdc",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SubNdc" }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateOneBaseSubNdcControllerSubNdc",
        "summary": "Update a single SubNdc",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SubNdc" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SubNdc" }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "replaceOneBaseSubNdcControllerSubNdc",
        "summary": "Replace a single SubNdc",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SubNdc" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SubNdc" }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOneBaseSubNdcControllerSubNdc",
        "summary": "Delete a single SubNdc",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "Delete one base response" } }
      }
    },
    "/sub-ndc": {
      "get": {
        "operationId": "getManyBaseSubNdcControllerSubNdc",
        "summary": "Retrieve multiple SubNdcs",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/GetManySubNdcResponseDto" },
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/SubNdc" }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createOneBaseSubNdcControllerSubNdc",
        "summary": "Create a single SubNdc",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SubNdc" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SubNdc" }
              }
            }
          }
        }
      }
    },
    "/sub-ndc/bulk": {
      "post": {
        "operationId": "createManyBaseSubNdcControllerSubNdc",
        "summary": "Create multiple SubNdcs",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateManySubNdcDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/SubNdc" }
                }
              }
            }
          }
        }
      }
    },
    "/mitigation-action/{id}": {
      "get": {
        "operationId": "getOneBaseMitigationActionControllerMitigationActionType",
        "summary": "Retrieve a single MitigationActionType",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MitigationActionType"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateOneBaseMitigationActionControllerMitigationActionType",
        "summary": "Update a single MitigationActionType",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MitigationActionType" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MitigationActionType"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "replaceOneBaseMitigationActionControllerMitigationActionType",
        "summary": "Replace a single MitigationActionType",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MitigationActionType" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MitigationActionType"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOneBaseMitigationActionControllerMitigationActionType",
        "summary": "Delete a single MitigationActionType",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "Delete one base response" } }
      }
    },
    "/mitigation-action": {
      "get": {
        "operationId": "getManyBaseMitigationActionControllerMitigationActionType",
        "summary": "Retrieve multiple MitigationActionTypes",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyMitigationActionTypeResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MitigationActionType"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createOneBaseMitigationActionControllerMitigationActionType",
        "summary": "Create a single MitigationActionType",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MitigationActionType" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MitigationActionType"
                }
              }
            }
          }
        }
      }
    },
    "/mitigation-action/bulk": {
      "post": {
        "operationId": "createManyBaseMitigationActionControllerMitigationActionType",
        "summary": "Create multiple MitigationActionTypes",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManyMitigationActionTypeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MitigationActionType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/project-owner/{id}": {
      "get": {
        "operationId": "getOneBaseProjectOwnerControllerProjectOwner",
        "summary": "Retrieve a single ProjectOwner",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectOwner" }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateOneBaseProjectOwnerControllerProjectOwner",
        "summary": "Update a single ProjectOwner",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProjectOwner" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectOwner" }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "replaceOneBaseProjectOwnerControllerProjectOwner",
        "summary": "Replace a single ProjectOwner",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProjectOwner" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectOwner" }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOneBaseProjectOwnerControllerProjectOwner",
        "summary": "Delete a single ProjectOwner",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "Delete one base response" } }
      }
    },
    "/project-owner": {
      "get": {
        "operationId": "getManyBaseProjectOwnerControllerProjectOwner",
        "summary": "Retrieve multiple ProjectOwners",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyProjectOwnerResponseDto"
                    },
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/ProjectOwner" }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createOneBaseProjectOwnerControllerProjectOwner",
        "summary": "Create a single ProjectOwner",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProjectOwner" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectOwner" }
              }
            }
          }
        }
      }
    },
    "/project-owner/bulk": {
      "post": {
        "operationId": "createManyBaseProjectOwnerControllerProjectOwner",
        "summary": "Create multiple ProjectOwners",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManyProjectOwnerDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ProjectOwner" }
                }
              }
            }
          }
        }
      }
    },
    "/sector": {
      "get": {
        "operationId": "getManyBaseSectorControllerSector",
        "summary": "Retrieve multiple Sectors",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      },
      "post": {
        "operationId": "createOneBaseSectorControllerSector",
        "summary": "Create a single Sector",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Sector" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Sector" }
              }
            }
          },
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Sector" }
              }
            }
          }
        }
      }
    },
    "/sector/sector/sectorinfo/{page}/{limit}/{filterText}": {
      "get": {
        "operationId": "SectorController_getSectorDetails",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "filterText",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      }
    },
    "/sector/{id}": {
      "get": {
        "operationId": "getOneBaseSectorControllerSector",
        "summary": "Retrieve a single Sector",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Sector" }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateOneBaseSectorControllerSector",
        "summary": "Update a single Sector",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Sector" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Sector" }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "replaceOneBaseSectorControllerSector",
        "summary": "Replace a single Sector",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Sector" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Sector" }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOneBaseSectorControllerSector",
        "summary": "Delete a single Sector",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "Delete one base response" } }
      }
    },
    "/sector/bulk": {
      "post": {
        "operationId": "createManyBaseSectorControllerSector",
        "summary": "Create multiple Sectors",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateManySectorDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Sector" }
                }
              }
            }
          }
        }
      }
    },
    "/project-status/{id}": {
      "get": {
        "operationId": "getOneBaseProjectStatusControllerProjectStatus",
        "summary": "Retrieve a single ProjectStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectStatus" }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateOneBaseProjectStatusControllerProjectStatus",
        "summary": "Update a single ProjectStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProjectStatus" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectStatus" }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "replaceOneBaseProjectStatusControllerProjectStatus",
        "summary": "Replace a single ProjectStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProjectStatus" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectStatus" }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOneBaseProjectStatusControllerProjectStatus",
        "summary": "Delete a single ProjectStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "Delete one base response" } }
      }
    },
    "/project-status": {
      "get": {
        "operationId": "getManyBaseProjectStatusControllerProjectStatus",
        "summary": "Retrieve multiple ProjectStatuses",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyProjectStatusResponseDto"
                    },
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/ProjectStatus" }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createOneBaseProjectStatusControllerProjectStatus",
        "summary": "Create a single ProjectStatus",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProjectStatus" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectStatus" }
              }
            }
          }
        }
      }
    },
    "/project-status/bulk": {
      "post": {
        "operationId": "createManyBaseProjectStatusControllerProjectStatus",
        "summary": "Create multiple ProjectStatuses",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManyProjectStatusDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ProjectStatus" }
                }
              }
            }
          }
        }
      }
    },
    "/document/upload": {
      "post": {
        "operationId": "DocumentController_uploadFile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Documents" }
            }
          }
        },
        "responses": { "201": { "description": "" } }
      }
    },
    "/document/upload2/{oid}/{owner}": {
      "post": {
        "operationId": "DocumentController_uploadFile2",
        "parameters": [],
        "responses": { "201": { "description": "" } }
      }
    },
    "/document/upload3/{oid}": {
      "post": {
        "operationId": "DocumentController_uploadFile3",
        "parameters": [],
        "responses": { "201": { "description": "" } }
      }
    },
    "/document/delete/{docId}": {
      "post": {
        "operationId": "DocumentController_deleteDoc",
        "parameters": [
          {
            "name": "docId",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "201": { "description": "" } }
      }
    },
    "/document/getDocument/{oid}/{owner}": {
      "get": {
        "operationId": "DocumentController_getDocuments",
        "parameters": [
          {
            "name": "oid",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "owner",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Documents" }
                }
              }
            }
          }
        }
      }
    },
    "/document/downloadDocument/{state}/{did}": {
      "get": {
        "operationId": "DocumentController_downloadDocuments",
        "parameters": [
          {
            "name": "did",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "state",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } }
      }
    },
    "/document/{id}": {
      "get": {
        "operationId": "getOneBaseDocumentControllerDocuments",
        "summary": "Retrieve a single Documents",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Documents" }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateOneBaseDocumentControllerDocuments",
        "summary": "Update a single Documents",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Documents" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Documents" }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "replaceOneBaseDocumentControllerDocuments",
        "summary": "Replace a single Documents",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Documents" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Documents" }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOneBaseDocumentControllerDocuments",
        "summary": "Delete a single Documents",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "Delete one base response" } }
      }
    },
    "/document": {
      "get": {
        "operationId": "getManyBaseDocumentControllerDocuments",
        "summary": "Retrieve multiple Documents",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyDocumentsResponseDto"
                    },
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Documents" }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createOneBaseDocumentControllerDocuments",
        "summary": "Create a single Documents",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Documents" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Documents" }
              }
            }
          }
        }
      }
    },
    "/document/bulk": {
      "post": {
        "operationId": "createManyBaseDocumentControllerDocuments",
        "summary": "Create multiple Documents",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManyDocumentsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Documents" }
                }
              }
            }
          }
        }
      }
    },
    "/auth/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AuthCredentialDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      }
    },
    "/auth/auth/validate-reset-password/{email}/{token}": {
      "get": {
        "operationId": "AuthController_validateResetPassword",
        "parameters": [
          {
            "name": "email",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "token",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "boolean" } }
            }
          }
        }
      }
    },
    "/auth/auth/reset-password": {
      "put": {
        "operationId": "AuthController_resetPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ResetPassword" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "boolean" } }
            }
          }
        }
      }
    },
    "/auth/auth/forgot-password": {
      "post": {
        "operationId": "AuthController_forgotPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ForgotPasswordDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "operationId": "createOneBaseUsersControllerUser",
        "summary": "Create a single User",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getManyBaseUsersControllerUser",
        "summary": "Retrieve multiple Users",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      }
    },
    "/users/changeStatus": {
      "patch": {
        "operationId": "UsersController_changeStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          }
        }
      }
    },
    "/users/findUserBy": {
      "get": {
        "operationId": "UsersController_findUserByUserType",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "getOneBaseUsersControllerUser",
        "summary": "Retrieve a single User",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOneBaseUsersControllerUser",
        "summary": "Delete a single User",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "Delete one base response" } }
      },
      "patch": {
        "operationId": "updateOneBaseUsersControllerUser",
        "summary": "Update a single User",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "replaceOneBaseUsersControllerUser",
        "summary": "Replace a single User",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          }
        }
      }
    },
    "/users/isUserAvailable/{userName}": {
      "get": {
        "operationId": "UsersController_isUserAvailable",
        "parameters": [
          {
            "name": "userName",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "boolean" } }
            }
          }
        }
      }
    },
    "/users/findUserByUserName/{userName}": {
      "get": {
        "operationId": "UsersController_findUserByUserName",
        "parameters": [
          {
            "name": "userName",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      }
    },
    "/users/AllUserDetails/userDetalils/{page}/{limit}/{filterText}/{userTypeId}": {
      "get": {
        "operationId": "UsersController_getUserList",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "userTypeId",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      }
    },
    "/users/bulk": {
      "post": {
        "operationId": "createManyBaseUsersControllerUser",
        "summary": "Create multiple Users",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateManyUserDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/User" }
                }
              }
            }
          }
        }
      }
    },
    "/institution/institution/institutioninfo/{page}/{limit}/{filterText}/{countryId}": {
      "get": {
        "operationId": "InstitutionController_getInstiDetails",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "filterText",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "countryId",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      }
    },
    "/institution/institution/institutioninfopmu": {
      "get": {
        "operationId": "InstitutionController_getPmuAdminAssignInstitution",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      }
    },
    "/institution/deactivateInstitution": {
      "get": {
        "operationId": "InstitutionController_deactivateInstitution",
        "parameters": [
          {
            "name": "institutionId",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      }
    },
    "/institution": {
      "post": {
        "operationId": "createOneBaseInstitutionControllerInstitution",
        "summary": "Create a single Institution",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Institution" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Institution" }
              }
            }
          },
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Institution" }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getManyBaseInstitutionControllerInstitution",
        "summary": "Retrieve multiple Institutions",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyInstitutionResponseDto"
                    },
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Institution" }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/institution/{id}": {
      "patch": {
        "operationId": "updateOneBaseInstitutionControllerInstitution",
        "summary": "Update a single Institution",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Institution" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Institution" }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getOneBaseInstitutionControllerInstitution",
        "summary": "Retrieve a single Institution",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Institution" }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "replaceOneBaseInstitutionControllerInstitution",
        "summary": "Replace a single Institution",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Institution" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Institution" }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOneBaseInstitutionControllerInstitution",
        "summary": "Delete a single Institution",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "Delete one base response" } }
      }
    },
    "/institution/bulk": {
      "post": {
        "operationId": "createManyBaseInstitutionControllerInstitution",
        "summary": "Create multiple Institutions",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManyInstitutionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Institution" }
                }
              }
            }
          }
        }
      }
    },
    "/institution-type/institutionTypeByUserType": {
      "get": {
        "operationId": "InstitutionTypeController_findInstitutionTypeByUserType",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      }
    },
    "/institution-type/{id}": {
      "get": {
        "operationId": "getOneBaseInstitutionTypeControllerInstitutionType",
        "summary": "Retrieve a single InstitutionType",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InstitutionType" }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateOneBaseInstitutionTypeControllerInstitutionType",
        "summary": "Update a single InstitutionType",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/InstitutionType" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InstitutionType" }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "replaceOneBaseInstitutionTypeControllerInstitutionType",
        "summary": "Replace a single InstitutionType",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/InstitutionType" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InstitutionType" }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOneBaseInstitutionTypeControllerInstitutionType",
        "summary": "Delete a single InstitutionType",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "Delete one base response" } }
      }
    },
    "/institution-type": {
      "get": {
        "operationId": "getManyBaseInstitutionTypeControllerInstitutionType",
        "summary": "Retrieve multiple InstitutionTypes",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyInstitutionTypeResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InstitutionType"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createOneBaseInstitutionTypeControllerInstitutionType",
        "summary": "Create a single InstitutionType",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/InstitutionType" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InstitutionType" }
              }
            }
          }
        }
      }
    },
    "/institution-type/bulk": {
      "post": {
        "operationId": "createManyBaseInstitutionTypeControllerInstitutionType",
        "summary": "Create multiple InstitutionTypes",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManyInstitutionTypeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/InstitutionType" }
                }
              }
            }
          }
        }
      }
    },
    "/institution-category/{id}": {
      "get": {
        "operationId": "getOneBaseInstitutionCategoryControllerInstitutionCategory",
        "summary": "Retrieve a single InstitutionCategory",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InstitutionCategory" }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateOneBaseInstitutionCategoryControllerInstitutionCategory",
        "summary": "Update a single InstitutionCategory",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/InstitutionCategory" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InstitutionCategory" }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "replaceOneBaseInstitutionCategoryControllerInstitutionCategory",
        "summary": "Replace a single InstitutionCategory",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/InstitutionCategory" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InstitutionCategory" }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOneBaseInstitutionCategoryControllerInstitutionCategory",
        "summary": "Delete a single InstitutionCategory",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "Delete one base response" } }
      }
    },
    "/institution-category": {
      "get": {
        "operationId": "getManyBaseInstitutionCategoryControllerInstitutionCategory",
        "summary": "Retrieve multiple InstitutionCategories",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyInstitutionCategoryResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InstitutionCategory"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createOneBaseInstitutionCategoryControllerInstitutionCategory",
        "summary": "Create a single InstitutionCategory",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/InstitutionCategory" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InstitutionCategory" }
              }
            }
          }
        }
      }
    },
    "/institution-category/bulk": {
      "post": {
        "operationId": "createManyBaseInstitutionCategoryControllerInstitutionCategory",
        "summary": "Create multiple InstitutionCategories",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManyInstitutionCategoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InstitutionCategory"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/project-approval-status/{id}": {
      "get": {
        "operationId": "getOneBaseProjectApprovalStatusControllerProjectApprovalStatus",
        "summary": "Retrieve a single ProjectApprovalStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectApprovalStatus"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateOneBaseProjectApprovalStatusControllerProjectApprovalStatus",
        "summary": "Update a single ProjectApprovalStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProjectApprovalStatus" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectApprovalStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "replaceOneBaseProjectApprovalStatusControllerProjectApprovalStatus",
        "summary": "Replace a single ProjectApprovalStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProjectApprovalStatus" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectApprovalStatus"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOneBaseProjectApprovalStatusControllerProjectApprovalStatus",
        "summary": "Delete a single ProjectApprovalStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "Delete one base response" } }
      }
    },
    "/project-approval-status": {
      "get": {
        "operationId": "getManyBaseProjectApprovalStatusControllerProjectApprovalStatus",
        "summary": "Retrieve multiple ProjectApprovalStatuses",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyProjectApprovalStatusResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectApprovalStatus"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createOneBaseProjectApprovalStatusControllerProjectApprovalStatus",
        "summary": "Create a single ProjectApprovalStatus",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProjectApprovalStatus" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectApprovalStatus"
                }
              }
            }
          }
        }
      }
    },
    "/project-approval-status/bulk": {
      "post": {
        "operationId": "createManyBaseProjectApprovalStatusControllerProjectApprovalStatus",
        "summary": "Create multiple ProjectApprovalStatuses",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManyProjectApprovalStatusDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectApprovalStatus"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/usertype/{id}": {
      "get": {
        "operationId": "getOneBaseUserTypeControllerUserType",
        "summary": "Retrieve a single UserType",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserType" }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateOneBaseUserTypeControllerUserType",
        "summary": "Update a single UserType",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserType" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserType" }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "replaceOneBaseUserTypeControllerUserType",
        "summary": "Replace a single UserType",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserType" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserType" }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteOneBaseUserTypeControllerUserType",
        "summary": "Delete a single UserType",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": { "200": { "description": "Delete one base response" } }
      }
    },
    "/usertype": {
      "get": {
        "operationId": "getManyBaseUserTypeControllerUserType",
        "summary": "Retrieve multiple UserTypes",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyUserTypeResponseDto"
                    },
                    {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/UserType" }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createOneBaseUserTypeControllerUserType",
        "summary": "Create a single UserType",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserType" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserType" }
              }
            }
          }
        }
      }
    },
    "/usertype/bulk": {
      "post": {
        "operationId": "createManyBaseUserTypeControllerUserType",
        "summary": "Create multiple UserTypes",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateManyUserTypeDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UserType" }
                }
              }
            }
          }
        }
      }
    },
    "/learning-material/learning-material/learning-materialinfo/{page}/{limit}/{filterText}/{typeId}/{sectorId}/{sortOrder}/{sortType}": {
      "get": {
        "operationId": "LearningMaterialController_getLearningMaterialDetails",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "filterText",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "typeId",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "sectorId",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "sortOrder",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "sortType",
            "required": true,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      }
    },
    "/learning-material/{id}": {
      "delete": {
        "operationId": "deleteOneBaseLearningMaterialControllerLearningMaterial",
        "summary": "Delete a single LearningMaterial",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "number" } }
            }
          }
        }
      },
      "get": {
        "operationId": "getOneBaseLearningMaterialControllerLearningMaterial",
        "summary": "Retrieve a single LearningMaterial",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LearningMaterial" }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateOneBaseLearningMaterialControllerLearningMaterial",
        "summary": "Update a single LearningMaterial",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LearningMaterial" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LearningMaterial" }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "replaceOneBaseLearningMaterialControllerLearningMaterial",
        "summary": "Replace a single LearningMaterial",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LearningMaterial" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LearningMaterial" }
              }
            }
          }
        }
      }
    },
    "/learning-material": {
      "post": {
        "operationId": "createOneBaseLearningMaterialControllerLearningMaterial",
        "summary": "Create a single LearningMaterial",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LearningMaterial" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LearningMaterial" }
              }
            }
          },
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LearningMaterial" }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getManyBaseLearningMaterialControllerLearningMaterial",
        "summary": "Retrieve multiple LearningMaterials",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get many base response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetManyLearningMaterialResponseDto"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LearningMaterial"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/learning-material/user-type": {
      "get": {
        "operationId": "LearningMaterialController_getalluserType",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LearningMaterialUserType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/learning-material/sector": {
      "get": {
        "operationId": "LearningMaterialController_getallsector",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LearningMaterialSector"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/learning-material/bulk": {
      "post": {
        "operationId": "createManyBaseLearningMaterialControllerLearningMaterial",
        "summary": "Create multiple LearningMaterials",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManyLearningMaterialDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/LearningMaterial" }
                }
              }
            }
          }
        }
      }
    }
  },
  "info": {
    "title": "ICAT",
    "description": "ICAT",
    "version": "1.0",
    "contact": {}
  },
  "tags": [{ "name": "ICAT", "description": "" }],
  "servers": [],
  "components": {
    "securitySchemes": {
      "cookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "optional-session-id"
      }
    },
    "schemas": {
      "GetManyFinancingSchemeResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FinancingScheme" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "FinancingScheme": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "id": { "type": "number" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "sortOrder": { "type": "number" }
        },
        "required": [
          "editedBy",
          "status",
          "id",
          "name",
          "description",
          "sortOrder"
        ]
      },
      "CreateManyFinancingSchemeDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/FinancingScheme" }
          }
        },
        "required": ["bulk"]
      },
      "GetManyMethodologyDataResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MethodologyData" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "GetManySectorResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Sector" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "GetManyCountryResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Country" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "GetManyInstitutionResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Institution" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "GetManyInstitutionTypeResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/InstitutionType" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "InstitutionType": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "id": { "type": "number" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "sortOrder": { "type": "number" }
        },
        "required": [
          "editedBy",
          "status",
          "id",
          "name",
          "description",
          "sortOrder"
        ]
      },
      "Institution": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "id": { "type": "number" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "sortOrder": { "type": "number" },
          "uniqueIdentification": { "type": "string" },
          "type": { "$ref": "#/components/schemas/InstitutionType" },
          "isNational": { "type": "boolean" },
          "parentInstitution": { "$ref": "#/components/schemas/Institution" },
          "deletedAt": { "format": "date-time", "type": "string" },
          "canNotDelete": { "type": "boolean" },
          "address": { "type": "string" },
          "contactNumber": { "type": "string" },
          "countries": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Country" }
          }
        },
        "required": [
          "editedBy",
          "status",
          "id",
          "name",
          "description",
          "sortOrder",
          "uniqueIdentification",
          "type",
          "isNational",
          "address",
          "contactNumber",
          "countries"
        ]
      },
      "Country": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "id": { "type": "number" },
          "code": { "type": "string" },
          "code_extended": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "sortOrder": { "type": "number" },
          "isSystemUse": { "type": "boolean" },
          "isCA": { "type": "boolean" },
          "flagPath": { "type": "string" },
          "registeredDate": { "format": "date-time", "type": "string" },
          "isMember": { "type": "boolean" },
          "countryStatus": {
            "enum": ["Active", "Deactivated"],
            "type": "string"
          },
          "region": { "type": "string" },
          "uniqueIdentification": { "type": "string" },
          "countrysector": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CountrySector" }
          },
          "institution": { "$ref": "#/components/schemas/Institution" },
          "climateActionModule": { "type": "boolean" },
          "ghgModule": { "type": "boolean" },
          "macModule": { "type": "boolean" },
          "dataCollectionModule": { "type": "boolean" },
          "dataCollectionGhgModule": { "type": "boolean" }
        },
        "required": [
          "editedBy",
          "status",
          "id",
          "code",
          "code_extended",
          "name",
          "description",
          "sortOrder",
          "isSystemUse",
          "isCA",
          "flagPath",
          "registeredDate",
          "isMember",
          "countryStatus",
          "region",
          "uniqueIdentification",
          "countrysector",
          "climateActionModule",
          "ghgModule",
          "macModule",
          "dataCollectionModule",
          "dataCollectionGhgModule"
        ]
      },
      "CountrySector": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "id": { "type": "number" },
          "country": { "$ref": "#/components/schemas/Country" },
          "sector": { "$ref": "#/components/schemas/Sector" },
          "countryId": { "type": "number" },
          "sectorId": { "type": "number" },
          "uniqueIdentification": { "type": "string" }
        },
        "required": [
          "editedBy",
          "status",
          "id",
          "country",
          "sector",
          "countryId",
          "sectorId",
          "uniqueIdentification"
        ]
      },
      "GetManyLearningMaterialResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/LearningMaterial" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "GetManyUserTypeResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserType" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "UserType": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "learningMaterialusertype": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/LearningMaterialUserType" }
          },
          "id": { "type": "number" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "sortOrder": { "type": "number" }
        },
        "required": [
          "editedBy",
          "status",
          "learningMaterialusertype",
          "id",
          "name",
          "description",
          "sortOrder"
        ]
      },
      "LearningMaterialUserType": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "id": { "type": "number" },
          "uniqueIdentification": { "type": "string" },
          "learningMaterial": {
            "$ref": "#/components/schemas/LearningMaterial"
          },
          "userType": { "$ref": "#/components/schemas/UserType" },
          "userid": { "type": "number" }
        },
        "required": [
          "editedBy",
          "status",
          "id",
          "uniqueIdentification",
          "learningMaterial",
          "userType",
          "userid"
        ]
      },
      "LearningMaterial": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "id": { "type": "number" },
          "documentType": { "type": "string" },
          "documentName": { "type": "string" },
          "document": { "type": "string" },
          "thumbnail": { "type": "string" },
          "isPublish": { "type": "boolean" },
          "deletedAt": { "format": "date-time", "type": "string" },
          "uniqueIdentification": { "type": "string" },
          "learningMaterialusertype": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/LearningMaterialUserType" }
          },
          "learningMaterialsector": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/LearningMaterialSector" }
          }
        },
        "required": [
          "editedBy",
          "status",
          "id",
          "documentType",
          "documentName",
          "document",
          "thumbnail",
          "isPublish",
          "uniqueIdentification",
          "learningMaterialusertype",
          "learningMaterialsector"
        ]
      },
      "LearningMaterialSector": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "id": { "type": "number" },
          "uniqueIdentification": { "type": "string" },
          "learningMaterial2": {
            "$ref": "#/components/schemas/LearningMaterial"
          },
          "sector": { "$ref": "#/components/schemas/Sector" }
        },
        "required": [
          "editedBy",
          "status",
          "id",
          "uniqueIdentification",
          "learningMaterial2",
          "sector"
        ]
      },
      "SubSector": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "id": { "type": "number" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "sortOrder": { "type": "number" },
          "sector": { "$ref": "#/components/schemas/Sector" }
        },
        "required": [
          "editedBy",
          "status",
          "id",
          "name",
          "description",
          "sortOrder",
          "sector"
        ]
      },
      "Sector": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "id": { "type": "number" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "sortOrder": { "type": "number" },
          "countrysector": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CountrySector" }
          },
          "learningMaterialsector": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/LearningMaterialSector" }
          },
          "subSector": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/SubSector" }
          },
          "uniqueIdentification": { "type": "string" }
        },
        "required": [
          "editedBy",
          "status",
          "id",
          "name",
          "description",
          "sortOrder",
          "countrysector",
          "learningMaterialsector",
          "subSector",
          "uniqueIdentification"
        ]
      },
      "GetManyMitigationActionTypeResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MitigationActionType" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "MitigationActionType": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "uniqueIdentification": { "type": "string" },
          "id": { "type": "number" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "sortOrder": { "type": "number" }
        },
        "required": [
          "editedBy",
          "status",
          "uniqueIdentification",
          "id",
          "name",
          "description",
          "sortOrder"
        ]
      },
      "GetManyApplicabilityEntityResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ApplicabilityEntity" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "ApplicabilityEntity": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "uniqueIdentification": { "type": "string" },
          "id": { "type": "number" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "sortOrder": { "type": "number" }
        },
        "required": [
          "editedBy",
          "status",
          "uniqueIdentification",
          "id",
          "name",
          "description",
          "sortOrder"
        ]
      },
      "MethodologyData": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "id": { "type": "number" },
          "version": { "type": "string" },
          "name": { "type": "string" },
          "displayName": { "type": "string" },
          "developedBy": { "type": "string" },
          "parentId": { "type": "number" },
          "applicableSector": { "type": "string" },
          "documents": { "type": "string" },
          "easenessOfDataCollection": { "type": "string" },
          "transportSubSector": { "type": "string" },
          "upstream_downstream": { "type": "string" },
          "ghgIncluded": { "type": "string" },
          "uniqueIdentification": { "type": "string" },
          "sector": { "$ref": "#/components/schemas/Sector" },
          "mitigationActionType": {
            "$ref": "#/components/schemas/MitigationActionType"
          },
          "applicability": {
            "$ref": "#/components/schemas/ApplicabilityEntity"
          },
          "baselineImage": { "type": "string" },
          "projectImage": { "type": "string" },
          "projectionImage": { "type": "string" },
          "leakageImage": { "type": "string" },
          "resultImage": { "type": "string" }
        },
        "required": [
          "editedBy",
          "status",
          "id",
          "version",
          "name",
          "displayName",
          "developedBy",
          "parentId",
          "applicableSector",
          "documents",
          "easenessOfDataCollection",
          "transportSubSector",
          "upstream_downstream",
          "ghgIncluded",
          "uniqueIdentification",
          "baselineImage",
          "projectImage",
          "projectionImage",
          "leakageImage",
          "resultImage"
        ]
      },
      "CreateManyMethodologyDataDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MethodologyData" }
          }
        },
        "required": ["bulk"]
      },
      "GetManyMethodologyResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Methodology" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "Methodology": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "id": { "type": "number" },
          "version": { "type": "string" },
          "name": { "type": "string" },
          "displayName": { "type": "string" },
          "developedBy": { "type": "string" },
          "parentId": { "type": "number" },
          "applicableSector": { "type": "string" },
          "documents": { "type": "string" },
          "isActive": { "enum": [1, 2], "type": "number" },
          "easenessOfDataCollection": { "type": "string" },
          "transportSubSector": { "type": "string" },
          "upstream_downstream": { "type": "string" },
          "ghgIncluded": { "type": "string" },
          "uniqueIdentification": { "type": "string" },
          "country": { "$ref": "#/components/schemas/Country" },
          "sector": { "$ref": "#/components/schemas/Sector" },
          "mitigationActionType": {
            "$ref": "#/components/schemas/MitigationActionType"
          },
          "applicability": {
            "$ref": "#/components/schemas/ApplicabilityEntity"
          },
          "method": { "$ref": "#/components/schemas/MethodologyData" }
        },
        "required": [
          "editedBy",
          "status",
          "id",
          "version",
          "name",
          "displayName",
          "developedBy",
          "parentId",
          "applicableSector",
          "documents",
          "isActive",
          "easenessOfDataCollection",
          "transportSubSector",
          "upstream_downstream",
          "ghgIncluded",
          "uniqueIdentification"
        ]
      },
      "CreateManyMethodologyDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Methodology" }
          }
        },
        "required": ["bulk"]
      },
      "GetManyEmissionReductioDraftDataEntityResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmissionReductioDraftDataEntity"
            }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "EmissionReductioDraftDataEntity": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "country": { "$ref": "#/components/schemas/Country" },
          "sector": { "$ref": "#/components/schemas/Sector" },
          "baseYear": { "type": "string" },
          "baseYearEmission": { "type": "number" },
          "targetYear": { "type": "string" },
          "targetYearEmission": { "type": "number" },
          "unconditionaltco2": { "type": "number" },
          "conditionaltco2": { "type": "number" },
          "id": { "type": "number" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "sortOrder": { "type": "number" }
        },
        "required": [
          "editedBy",
          "status",
          "country",
          "sector",
          "baseYear",
          "baseYearEmission",
          "targetYear",
          "targetYearEmission",
          "unconditionaltco2",
          "conditionaltco2",
          "id",
          "name",
          "description",
          "sortOrder"
        ]
      },
      "CreateManyEmissionReductioDraftDataEntityDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmissionReductioDraftDataEntity"
            }
          }
        },
        "required": ["bulk"]
      },
      "GetManyReportResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Report" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "Report": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "id": { "type": "number" },
          "reportName": { "type": "string" },
          "savedLocation": { "type": "string" },
          "country": { "$ref": "#/components/schemas/Country" },
          "description": { "type": "string" },
          "isPublish": { "type": "number" },
          "thumbnail": { "type": "string" }
        },
        "required": [
          "editedBy",
          "status",
          "id",
          "reportName",
          "savedLocation",
          "country",
          "description",
          "isPublish",
          "thumbnail"
        ]
      },
      "CreateManyReportDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Report" }
          }
        },
        "required": ["bulk"]
      },
      "CreateManyApplicabilityEntityDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ApplicabilityEntity" }
          }
        },
        "required": ["bulk"]
      },
      "AuditDto": { "type": "object", "properties": {} },
      "GetManyAuditResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Audit" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "GetManyUserResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/User" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "User": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "id": { "type": "number" },
          "uniqueIdentification": { "type": "string" },
          "userType": { "$ref": "#/components/schemas/UserType" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "username": { "type": "string" },
          "email": { "type": "string" },
          "institution": { "$ref": "#/components/schemas/Institution" },
          "telephone": { "type": "string" },
          "mobile": { "type": "string" },
          "mrvInstitution": { "type": "string" },
          "country": { "$ref": "#/components/schemas/Country" },
          "salt": { "type": "string" },
          "password": { "type": "string" },
          "resetToken": { "type": "string" },
          "deletedAt": { "format": "date-time", "type": "string" },
          "canNotDelete": { "type": "boolean" },
          "fullName": { "type": "string" },
          "_fullname": { "type": "string" }
        },
        "required": [
          "editedBy",
          "status",
          "id",
          "uniqueIdentification",
          "userType",
          "firstName",
          "lastName",
          "username",
          "email",
          "institution",
          "telephone",
          "mobile",
          "mrvInstitution",
          "salt",
          "password",
          "resetToken",
          "fullName",
          "_fullname"
        ]
      },
      "Audit": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "id": { "type": "number" },
          "user": { "$ref": "#/components/schemas/User" },
          "userName": { "type": "string" },
          "action": { "type": "string" },
          "comment": { "type": "string" },
          "actionStatus": { "type": "string" },
          "userType": { "type": "string" }
        },
        "required": [
          "editedBy",
          "status",
          "id",
          "user",
          "userName",
          "action",
          "comment",
          "actionStatus",
          "userType"
        ]
      },
      "CreateManyAuditDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Audit" }
          }
        },
        "required": ["bulk"]
      },
      "GetManyProjectResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Project" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "GetManyProjectStatusResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ProjectStatus" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "ProjectStatus": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "id": { "type": "number" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "sortOrder": { "type": "number" }
        },
        "required": [
          "editedBy",
          "status",
          "id",
          "name",
          "description",
          "sortOrder"
        ]
      },
      "GetManyNdcResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Ndc" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "GetManySubNdcResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/SubNdc" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "SubNdc": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "ndc": { "$ref": "#/components/schemas/Ndc" },
          "id": { "type": "number" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "sortOrder": { "type": "number" }
        },
        "required": [
          "editedBy",
          "status",
          "ndc",
          "id",
          "name",
          "description",
          "sortOrder"
        ]
      },
      "GetManyNdcSetResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/NdcSet" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "NdcSet": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "country": { "$ref": "#/components/schemas/Country" },
          "submissionDate": { "format": "date-time", "type": "string" },
          "id": { "type": "number" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "sortOrder": { "type": "number" }
        },
        "required": [
          "editedBy",
          "status",
          "country",
          "submissionDate",
          "id",
          "name",
          "description",
          "sortOrder"
        ]
      },
      "Ndc": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "subNdc": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/SubNdc" }
          },
          "set": { "$ref": "#/components/schemas/NdcSet" },
          "country": { "$ref": "#/components/schemas/Country" },
          "sector": { "$ref": "#/components/schemas/Sector" },
          "isSelected": { "type": "boolean" },
          "id": { "type": "number" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "sortOrder": { "type": "number" }
        },
        "required": [
          "editedBy",
          "status",
          "subNdc",
          "set",
          "country",
          "sector",
          "isSelected",
          "id",
          "name",
          "description",
          "sortOrder"
        ]
      },
      "GetManyProjectOwnerResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ProjectOwner" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "ProjectOwner": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "id": { "type": "number" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "sortOrder": { "type": "number" }
        },
        "required": [
          "editedBy",
          "status",
          "id",
          "name",
          "description",
          "sortOrder"
        ]
      },
      "GetManyProjectApprovalStatusResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ProjectApprovalStatus" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "ProjectApprovalStatus": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "id": { "type": "number" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "sortOrder": { "type": "number" }
        },
        "required": [
          "editedBy",
          "status",
          "id",
          "name",
          "description",
          "sortOrder"
        ]
      },
      "Project": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "id": { "type": "number" },
          "climateActionName": { "type": "string" },
          "description": { "type": "string" },
          "contactPersoFullName": { "type": "string" },
          "email": { "type": "string" },
          "contactPersonDesignation": { "type": "string" },
          "telephoneNumber": { "type": "string" },
          "mobileNumber": { "type": "string" },
          "institution": { "type": "string" },
          "mappedInstitution": { "$ref": "#/components/schemas/Institution" },
          "country": { "$ref": "#/components/schemas/Country" },
          "projectStatus": { "$ref": "#/components/schemas/ProjectStatus" },
          "sector": { "$ref": "#/components/schemas/Sector" },
          "ndc": { "$ref": "#/components/schemas/Ndc" },
          "subNdc": { "$ref": "#/components/schemas/SubNdc" },
          "projectScope": { "type": "string" },
          "projectOwner": { "$ref": "#/components/schemas/ProjectOwner" },
          "acceptedDate": { "format": "date-time", "type": "string" },
          "proposeDateofCommence": { "format": "date-time", "type": "string" },
          "duration": { "type": "number" },
          "objective": { "type": "string" },
          "subNationalLevl1": { "type": "string" },
          "subNationalLevl2": { "type": "string" },
          "subNationalLevl3": { "type": "string" },
          "longitude": { "type": "number" },
          "latitude": { "type": "number" },
          "outcome": { "type": "string" },
          "currentProgress": { "type": "string" },
          "chgEmissions": { "type": "string" },
          "adaptationBenefits": { "type": "string" },
          "directSDBenefit": { "type": "string" },
          "indirectSDBenefit": { "type": "string" },
          "implementingEntity": { "type": "string" },
          "executingEntity": { "type": "string" },
          "partiesInvolved": { "type": "string" },
          "beneficiaries": { "type": "string" },
          "financingScheme": { "$ref": "#/components/schemas/FinancingScheme" },
          "donors": { "type": "string" },
          "investors": { "type": "string" },
          "fundingOrganization": { "type": "string" },
          "initialInvestment": { "type": "number" },
          "annualFunding": { "type": "number" },
          "annualRevenue": { "type": "number" },
          "expectedRecurrentExpenditure": { "type": "object" },
          "mitigationActionType": {
            "$ref": "#/components/schemas/MitigationActionType"
          },
          "projectApprovalStatus": {
            "$ref": "#/components/schemas/ProjectApprovalStatus"
          },
          "projectRejectComment": { "type": "string" },
          "projectDataRequsetComment": { "type": "string" }
        },
        "required": [
          "editedBy",
          "status",
          "id",
          "climateActionName",
          "description",
          "contactPersoFullName",
          "email",
          "contactPersonDesignation",
          "telephoneNumber",
          "mobileNumber",
          "institution",
          "projectScope",
          "acceptedDate",
          "proposeDateofCommence",
          "duration",
          "objective",
          "subNationalLevl1",
          "subNationalLevl2",
          "subNationalLevl3",
          "longitude",
          "latitude",
          "outcome",
          "currentProgress",
          "chgEmissions",
          "adaptationBenefits",
          "directSDBenefit",
          "indirectSDBenefit",
          "implementingEntity",
          "executingEntity",
          "beneficiaries",
          "donors",
          "investors",
          "fundingOrganization",
          "expectedRecurrentExpenditure",
          "projectRejectComment",
          "projectDataRequsetComment"
        ]
      },
      "CreateManyProjectDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Project" }
          }
        },
        "required": ["bulk"]
      },
      "CreateManyCountryDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Country" }
          }
        },
        "required": ["bulk"]
      },
      "CreateManyNdcDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Ndc" }
          }
        },
        "required": ["bulk"]
      },
      "CreateManyNdcSetDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/NdcSet" }
          }
        },
        "required": ["bulk"]
      },
      "CreateManySubNdcDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/SubNdc" }
          }
        },
        "required": ["bulk"]
      },
      "CreateManyMitigationActionTypeDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MitigationActionType" }
          }
        },
        "required": ["bulk"]
      },
      "CreateManyProjectOwnerDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ProjectOwner" }
          }
        },
        "required": ["bulk"]
      },
      "CreateManySectorDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Sector" }
          }
        },
        "required": ["bulk"]
      },
      "CreateManyProjectStatusDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ProjectStatus" }
          }
        },
        "required": ["bulk"]
      },
      "GetManyDocumentsResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Documents" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "Documents": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "id": { "type": "number" },
          "documentOwner": { "enum": [1, 2, 3], "type": "number" },
          "documentOwnerId": { "type": "number" },
          "mimeType": { "type": "string" },
          "fileName": { "type": "string" },
          "relativePath": { "type": "string" },
          "url": { "type": "string" }
        },
        "required": [
          "editedBy",
          "status",
          "id",
          "documentOwner",
          "documentOwnerId",
          "mimeType",
          "fileName",
          "relativePath",
          "url"
        ]
      },
      "CreateManyDocumentsDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Documents" }
          }
        },
        "required": ["bulk"]
      },
      "AuthCredentialDto": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "password": { "type": "string" }
        },
        "required": ["username", "password"]
      },
      "ResetPassword": {
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "token": { "type": "string" },
          "password": { "type": "string" }
        },
        "required": ["email", "token", "password"]
      },
      "ForgotPasswordDto": {
        "type": "object",
        "properties": { "email": { "type": "string" } },
        "required": ["email"]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "userType": { "type": "number" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "username": { "type": "string" },
          "password": { "type": "string" },
          "email": { "type": "string" },
          "title": { "type": "string" },
          "institution": { "type": "number" },
          "mrvInstitution": { "type": "string" },
          "telephone": { "type": "string" },
          "mobile": { "type": "string" },
          "nic": { "type": "string" },
          "country": { "type": "number" }
        },
        "required": [
          "userType",
          "firstName",
          "lastName",
          "username",
          "password",
          "email",
          "title",
          "institution",
          "mrvInstitution",
          "telephone",
          "mobile",
          "nic",
          "country"
        ]
      },
      "CreateManyUserDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/User" }
          }
        },
        "required": ["bulk"]
      },
      "CreateManyInstitutionDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Institution" }
          }
        },
        "required": ["bulk"]
      },
      "CreateManyInstitutionTypeDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/InstitutionType" }
          }
        },
        "required": ["bulk"]
      },
      "GetManyInstitutionCategoryResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/InstitutionCategory" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "InstitutionCategory": {
        "type": "object",
        "properties": {
          "createdBy": { "type": "string" },
          "createdOn": { "format": "date-time", "type": "string" },
          "editedBy": { "type": "string" },
          "editedOn": { "format": "date-time", "type": "string" },
          "status": { "enum": [-20, -10, 0], "type": "number" },
          "id": { "type": "number" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "sortOrder": { "type": "number" }
        },
        "required": [
          "editedBy",
          "status",
          "id",
          "name",
          "description",
          "sortOrder"
        ]
      },
      "CreateManyInstitutionCategoryDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/InstitutionCategory" }
          }
        },
        "required": ["bulk"]
      },
      "CreateManyProjectApprovalStatusDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ProjectApprovalStatus" }
          }
        },
        "required": ["bulk"]
      },
      "CreateManyUserTypeDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserType" }
          }
        },
        "required": ["bulk"]
      },
      "CreateManyLearningMaterialDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/LearningMaterial" }
          }
        },
        "required": ["bulk"]
      }
    }
  }
}
